import streamlit as st
import plotly.express as px

st.title("üìò Simulador de Rescis√£o Trabalhista")
st.caption("Projeto de LegalTech (Direito do Trabalho) com Python e Streamlit")

# =============================
# üîπ ENTRADAS DO USU√ÅRIO
# =============================
st.header("1Ô∏è‚É£ Dados do contrato")

salario_mensal = st.number_input("üí∞ Sal√°rio Mensal (R$):", min_value=0.0, value=2000.00, step=100.0)
meses_trabalhados = st.number_input("üìÖ Meses Trabalhados:", min_value=0, max_value=12, value=9)
anos_servico = st.number_input("‚è≥ Anos de Servi√ßo:", min_value=0, max_value=30, value=3)

st.divider()

# =============================
# üîπ 13¬∫ SAL√ÅRIO PROPORCIONAL
# =============================
st.header("2Ô∏è‚É£ 13¬∫ Sal√°rio Proporcional")

decimo_terceiro = (salario_mensal / 12) * meses_trabalhados
st.markdown(f"""
**F√≥rmula:** (Sal√°rio √∑ 12) √ó Meses Trabalhados  
**C√°lculo:** ({salario_mensal:.2f} √∑ 12) √ó {meses_trabalhados} = R$ {decimo_terceiro:,.2f}
""")

# =============================
# üîπ F√âRIAS PROPORCIONAIS + 1/3
# =============================
st.header("3Ô∏è‚É£ F√©rias Proporcionais + 1/3 Constitucional")

ferias_proporcionais = (salario_mensal / 12) * meses_trabalhados
terco_constitucional = ferias_proporcionais / 3
total_ferias = ferias_proporcionais + terco_constitucional

st.markdown(f"""
**F√≥rmula das F√©rias:** (Sal√°rio √∑ 12) √ó Meses Trabalhados  
**C√°lculo:** ({salario_mensal:.2f} √∑ 12) √ó {meses_trabalhados} = R$ {ferias_proporcionais:,.2f}  

**F√≥rmula do 1/3 Constitucional:** F√©rias √∑ 3  
**C√°lculo:** {ferias_proporcionais:,.2f} √∑ 3 = R$ {terco_constitucional:,.2f}  

**Total:** R$ {total_ferias:,.2f}
""")

st.info("""
üîπ **1/3 Constitucional:** direito previsto no art. 7¬∫, XVII, da Constitui√ß√£o Federal.
Garante que o trabalhador receba um adicional equivalente a 1/3 sobre o valor das f√©rias.
""")

# =============================
# üîπ AVISO PR√âVIO INDENIZADO
# =============================
st.header("4Ô∏è‚É£ Aviso Pr√©vio Indenizado")

dias_aviso = 30 + (3 * anos_servico)
if dias_aviso > 90:
    dias_aviso = 90
aviso_prev = (salario_mensal / 30) * dias_aviso

st.markdown(f"""
**F√≥rmula:** (Sal√°rio √∑ 30) √ó Dias de Aviso  
**C√°lculo:** ({salario_mensal:.2f} √∑ 30) √ó {dias_aviso} = R$ {aviso_prev:,.2f}  
""")

st.info("""
üîπ Base legal: Lei n¬∫ 12.506/2011 ‚Äî o aviso pr√©vio √© de **30 dias**,
acrescido de **3 dias por ano trabalhado**, limitado a **90 dias**.
""")

# =============================
# üîπ FGTS + MULTA 40%
# =============================
st.header("5Ô∏è‚É£ FGTS e Multa de 40%")

fgts = salario_mensal * 0.08 * meses_trabalhados
multa_fgts = fgts * 0.40

st.markdown(f"""
**FGTS:** Sal√°rio √ó 8% √ó Meses Trabalhados  
**C√°lculo:** {salario_mensal:.2f} √ó 0.08 √ó {meses_trabalhados} = R$ {fgts:,.2f}  

**Multa de 40%:** FGTS √ó 0.40  
**C√°lculo:** {fgts:,.2f} √ó 0.40 = R$ {multa_fgts:,.2f}
""")

# =============================
# üîπ INSS (PROGRESSIVO 2025)
# =============================
st.header("6Ô∏è‚É£ INSS (C√°lculo Progressivo ‚Äì 2025)")

base_inss = decimo_terceiro + ferias_proporcionais + aviso_prev

faixas_inss = [
    (1412.00, 0.075),
    (2666.68, 0.09),
    (4000.03, 0.12),
    (7786.02, 0.14)
]

restante = base_inss
valor_inss = 0.0
limites = [1412.00, 2666.68, 4000.03, 7786.02]
previo = 0.0

for limite, aliquota in faixas_inss:
    if restante > limite - previo:
        valor_inss += (limite - previo) * aliquota
        restante -= (limite - previo)
        previo = limite
    else:
        valor_inss += restante * aliquota
        break

st.markdown(f"""
**Base de c√°lculo:** R$ {base_inss:,.2f}  
**Valor do INSS:** R$ {valor_inss:,.2f}
""")

# =============================
# üîπ IRRF (2025)
# =============================
st.header("7Ô∏è‚É£ IRRF (C√°lculo 2025)")

base_ir = base_inss - valor_inss
if base_ir <= 2259.20:
    aliquota_ir = 0
    deducao_ir = 0
elif base_ir <= 2826.65:
    aliquota_ir = 0.075
    deducao_ir = 169.44
elif base_ir <= 3751.05:
    aliquota_ir = 0.15
    deducao_ir = 381.44
elif base_ir <= 4664.68:
    aliquota_ir = 0.225
    deducao_ir = 662.77
else:
    aliquota_ir = 0.275
    deducao_ir = 896.00

valor_ir = (base_ir * aliquota_ir) - deducao_ir
if valor_ir < 0:
    valor_ir = 0

st.markdown(f"""
**Base ap√≥s INSS:** R$ {base_ir:,.2f}  
**Al√≠quota aplicada:** {aliquota_ir*100:.1f}%  
**Dedu√ß√£o:** R$ {deducao_ir:,.2f}  
**Valor do IRRF:** R$ {valor_ir:,.2f}
""")

# =============================
# üîπ TOTAIS
# =============================
st.header("8Ô∏è‚É£ Totais")

total_bruto = decimo_terceiro + total_ferias + aviso_prev + fgts + multa_fgts
total_descontos = valor_inss + valor_ir
total_liquido = total_bruto - total_descontos

st.markdown(f"""
**Total Bruto (todas as verbas):** R$ {total_bruto:,.2f}  
**Descontos (INSS + IRRF):** R$ {total_descontos:,.2f}  
**üí∞ Valor L√≠quido a Receber:** R$ {total_liquido:,.2f}
""")

# =============================
# üîπ GR√ÅFICO DE PIZZA
# =============================
st.header("9Ô∏è‚É£ Distribui√ß√£o dos Valores")

dados = {
    "Verba": ["13¬∫ Sal√°rio", "F√©rias + 1/3", "Aviso Pr√©vio", "FGTS", "Multa FGTS", "INSS", "IRRF"],
    "Valor": [decimo_terceiro, total_ferias, aviso_prev, fgts, multa_fgts, -valor_inss, -valor_ir]
}

fig = px.pie(dados, values="Valor", names="Verba", title="Distribui√ß√£o das Verbas e Descontos na Rescis√£o")
st.plotly_chart(fig)

# =============================
# üîπ FONTES E REFER√äNCIAS
# =============================
st.header("üìö Fontes e Base Legal")
st.markdown("""
- **Constitui√ß√£o Federal** ‚Äì art. 7¬∫, incisos XVII e XXI  
- **CLT (Consolida√ß√£o das Leis do Trabalho)** ‚Äì arts. 487, 478 e 479  
- **Lei n¬∫ 12.506/2011** ‚Äì Aviso Pr√©vio proporcional  
- **Lei n¬∫ 8.036/1990** ‚Äì FGTS  
- **Lei n¬∫ 8.212/1991** ‚Äì INSS  
- **Lei n¬∫ 9.250/1995** ‚Äì IRRF  
- **Tabelas de INSS e IRRF 2025 (Receita Federal)**
""")
